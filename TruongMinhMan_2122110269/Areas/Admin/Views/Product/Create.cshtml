@model TruongMinhMan_2122110269.Context.Product

@{
    ViewBag.Title = "Create Product";
}
<script src="~/Content/js/ckeditor/ckeditor.js"></script>
<h2 class="text-center text-primary mb-4">Create New Product</h2>

@using (Html.BeginForm("Create", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="card shadow-lg p-4">
        <h4 class="text-secondary">Product Information</h4>
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row mb-3">
            <div class="col-md-6">
                <label class="form-label">@Html.LabelFor(model => model.Name)</label>
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6">
                <label class="form-label">@Html.LabelFor(model => model.Avatar)</label>
                <input type="file" name="ImageUpload" class="form-control" />
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-md-6">
                <label class="form-label">@Html.LabelFor(model => model.CategoryId, "Category")</label>
                @Html.DropDownListFor(model => model.CategoryId, ViewBag.ListCategory as SelectList, new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6">
                <label class="form-label">@Html.LabelFor(model => model.BrandId, "Brand")</label>
                @Html.DropDownListFor(model => model.BrandId, ViewBag.ListBrand as SelectList, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BrandId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-md-12">
                <label class="form-label">@Html.LabelFor(model => model.ShortDes)</label>
                @Html.EditorFor(model => model.ShortDes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShortDes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-md-12">
                <label class="form-label">@Html.LabelFor(model => model.FullDescription)</label>
                @Html.TextAreaFor(model => model.FullDescription, new { htmlAttributes = new { @class = "form-control", @id = "FullDescription" } })
                <script type="text/javascript" lang="javascript">
                    CKEDITOR.replace("FullDescription")
                </script>
                @Html.ValidationMessageFor(model => model.FullDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-md-6">
                <label class="form-label">@Html.LabelFor(model => model.Price)</label>
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6">
                <label class="form-label">@Html.LabelFor(model => model.PriceDiscount)</label>
                @Html.EditorFor(model => model.PriceDiscount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PriceDiscount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-md-6">
                <label class="form-label">@Html.LabelFor(model => model.TypeId)</label>
                @Html.DropDownListFor(model => model.TypeId, ViewBag.ProductType as SelectList, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TypeId, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6">
                <label class="form-label">@Html.LabelFor(model => model.Slug)</label>
                @Html.EditorFor(model => model.Slug, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Slug, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="text-end">
            <button type="submit" class="btn btn-primary">Create</button>
            <a href="@Url.Action("Index", "Product")" class="btn btn-secondary">Back to List</a>
        </div>
    </div>
}
